## test for the ratio at which the relationship is undetectable
# gaussian and rnaseq
microb = read.table("/home/ratanond/Desktop/Masters_Project/Synthetic/Arghavan/MetaSample2/samples.txt")
microb = as.matrix(microb)
microb <- microb[,-1]
microb_rows = dim(microb)[1]/2  # divide by two to choose only the first class
microb = microb[1:microb_rows,]
sd <- apply(microb,2,sd)
microb <- microb[,which(sd!=0)]  # choose only OTUs with non-zero standard deviation
## The top ten are 417 541  42 125 235 545 547 128 147 148 (from linear_adjust.R)
microb <- microb[,c(417,541,42,125,235,545,547,128,147,148)] # five OTUs with min numbers of zeros
gaussian = read.table("/home/ratanond/Desktop/Masters_Project/Synthetic/Eunji/rnaseq_cls/rnaseq_cls/out/params_sb_high_1_ma_trn.txt",sep = ",")
gaussian <- as.matrix(gaussian)
gaussian_rows <- dim(gaussian)[1]/2    # divide by two to choose only the first class
gaussian <- gaussian[1:gaussian_rows,1:300]
rnaseq = read.table("/home/ratanond/Desktop/Masters_Project/Synthetic/Eunji/rnaseq_cls/rnaseq_cls/out/params_sb_high_1_trn.txt",sep = ",")
rnaseq = as.matrix(rnaseq)
rnaseq_rows = dim(rnaseq)[1]/2   # divide by two to choose only the first class
rnaseq = rnaseq[1:rnaseq_rows,1:300]
exclude_list = microb[,-c(417,42,125,235,128)]
include_list = microb[,c(417,42,125,235,128)]
all_list = cbind(include_list,exclude_list)
microb = read.table("/home/ratanond/Desktop/Masters_Project/Synthetic/Arghavan/MetaSample2/samples.txt")
microb = as.matrix(microb)
microb <- microb[,-1]
microb_rows = dim(microb)[1]/2  # divide by two to choose only the first class
microb = microb[1:microb_rows,]
sd <- apply(microb,2,sd)
microb <- microb[,which(sd!=0)]  # choose only OTUs with non-zero standard deviation
dim(microb)
head(t(microb))
t(microb)[1:9]
t(microb)[1:q0,]
t(microb)[1:10,]
exclude_list = microb[,-c(417,42,125,235,128)]
include_list = microb[,c(417,42,125,235,128)]
all_list = cbind(include_list,exclude_list)
myCCA <- function(microb_new,gaussian) {
library(PMA)
set.seed(1105)
ccaPerm = CCA.permute(x = microb_new, z = gaussian,
typex = "standard", typez = "standard",
nperms = 30, niter = 5, standardize = T,trace = F)
penXtemp = ccaPerm$bestpenaltyx
penZtemp = ccaPerm$bestpenaltyz
ccaRslt = CCA(x = microb_new, z = gaussian,
typex = "standard", typez = "standard",
penaltyx = penXtemp, penaltyz = penZtemp,
K = 2, niter = 5, standardize = T)
#sum(ccaRslt$u != 0)
#sum(ccaRslt$v != 0)
ccaScoreU = microb_new %*% ccaRslt$u
ccaScoreV = gaussian %*% ccaRslt$v
ccaScores = cbind(ccaScoreU, ccaScoreV)
colnames(ccaScores) = c("U1", "U2", "V1", "V2")
ccaScores = as.data.frame(ccaScores)
return(cor(ccaScores$U1,ccaScores$V1))
}
myCCA(microb,gaussian = )
dim(gaussian)
dim(microb)
myCCA(microb,gaussian)
myCCA(all_list,gaussian)
myCCA(all_list,rnaseq)
dim(all_list)
dim(gaussian)
